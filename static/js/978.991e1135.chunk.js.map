{"version":3,"file":"static/js/978.991e1135.chunk.js","mappings":"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","sources":["components/Modal/ModalLayout.jsx","redux/selectors.js","components/Card.jsx","components/SearchBar.jsx","components/Catalog.jsx","pages/Catalog.js"],"sourcesContent":["import { Container, Spinner } from '@chakra-ui/react';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nexport const ModalLayout = () => {\n  return (\n    <Container centerContent>\n      <Suspense fallback={<Spinner variant=\"bold\" size=\"xl\" />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nexport const selectOffer = state => state.offer.offer;\nexport const selectFilter = state => state.filter.filter;\n\nconst selectIsLoading = state => state.isLoading;\nconst selectIsErrors = state => state.isError;\n\nexport const useData = () => {\n  const offercart = useSelector(selectOffer);\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectIsErrors);\n  // const filter = useSelector(selectFilter);\n\n  return {\n    offercart,\n    loading,\n    error,\n    // filter,\n  };\n};\n","import {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Image,\n  // Tag,\n  // TagLabel,\n  // TagLeftIcon,\n  HStack,\n  VStack,\n  Text,\n  Heading,\n  IconButton,\n} from '@chakra-ui/react';\n\nimport { Icon } from '@iconify/react';\n// import { filteredOffers } from 'hooks/FilterHook';\n// import { useSelector } from 'react-redux';\nimport { useData } from '../redux/selectors';\n\nexport const CardStack = () => {\n  const { offercart } = useData();\n\n  console.log(offercart);\n\n  return (\n    <VStack spacing={8}>\n      {offercart.map(\n        ({\n          _id,\n          gallery,\n          name,\n          price,\n          rating,\n          location,\n          description,\n          reviews,\n        }) => {\n          return (\n            <Card key={_id}>\n              <HStack spacing={6}>\n                <Image\n                  w={290}\n                  h={310}\n                  objectFit=\"cover\"\n                  srcSet={gallery[0]}\n                  rounded={10}\n                />\n                <VStack w=\"full\" spacing={6}>\n                  <CardHeader>\n                    <VStack spacing={2}>\n                      <HStack w=\"100%\" justify=\"space-between\">\n                        <Heading>{name}</Heading>\n                        <HStack spacing={3}>\n                          <Text size=\"lg\">\n                            {new Intl.NumberFormat('en-GB', {\n                              style: 'currency',\n                              currency: 'EUR',\n                              maximumFractionDigits: '2',\n                            }).format(price)}\n                          </Text>\n                          <IconButton\n                            icon={\n                              <Icon\n                                icon=\"mdi:heart-outline\"\n                                fontSize={24}\n                                color=\"#e44848\"\n                              />\n                            }\n                            size=\"xs\"\n                            variant=\"unstyled\"\n                            isActive\n                          />\n                        </HStack>\n                      </HStack>\n                      <HStack w=\"100%\" align=\"left\" spacing={4}>\n                        <HStack spacing={1}>\n                          <Icon\n                            icon=\"basil:star-solid\"\n                            height={16}\n                            color=\"#ffc531\"\n                          />\n                          <Text textDecor=\"underline\">\n                            {rating}({reviews.length}&nbsp;Reviews)\n                          </Text>\n                        </HStack>\n                        <HStack spacing={1}>\n                          <Icon icon=\"ph:map-pin\" height={16} color=\"#101828\" />\n                          <Text>{location}</Text>\n                        </HStack>\n                      </HStack>\n                    </VStack>\n                  </CardHeader>\n                  <CardBody>\n                    <Text variant=\"selected\">{description}</Text>\n                  </CardBody>\n                  <CardFooter></CardFooter>\n                </VStack>\n              </HStack>\n            </Card>\n          );\n        }\n      )}\n    </VStack>\n  );\n};\n\n// {\n//   data.map(({ id, details }) => {\n//     return (\n//       <Tag key={id} size=\"md\" variant=\"subtle\">\n//         <TagLeftIcon boxSize=\"12px\" set=<Icon scr=\"\" /> />\n//         <TagLabel>{details}</TagLabel>\n//       </Tag>\n//     );\n//   });\n// }\n","import {\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { Icon } from '@iconify/react';\n\nexport const SearchBar = ({ filter, handleChange }) => {\n  return (\n    <FormControl as=\"form\">\n      <FormLabel>Location</FormLabel>\n      <InputGroup>\n        <InputLeftElement h=\"100%\" pointerEvents=\"none\">\n          <Icon icon=\"ph:map-pin\" height={20} color=\"rgba(16, 24, 40, 0.6)\" />\n        </InputLeftElement>\n        <Input\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={handleChange}\n          placeholder=\"City\"\n          variant=\"custom\"\n        />\n      </InputGroup>\n    </FormControl>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//------------------------------\nimport { Button, Stack, VStack } from '@chakra-ui/react';\nimport { ModalLayout } from './Modal/ModalLayout';\nimport { CardStack } from './Card';\nimport { SearchBar } from './SearchBar';\nimport { getOffersResponse } from 'services/api';\n\nexport const Catalog = () => {\n  const [limit, setLimit] = useState(4);\n  const [filter, setFilter] = useState('');\n\n  const dispatch = useDispatch();\n\n  dispatch(getOffersResponse({ limit, filter }));\n\n  const paginationHandler = () => {\n    setLimit(prevLimit => prevLimit + 4);\n  };\n\n  const handleChange = e => setFilter(e.target.value);\n\n  return (\n    <>\n      <Stack flexDir=\"row\" spacing={16}>\n        <VStack>\n          <SearchBar filter={filter} handleChange={handleChange} />\n        </VStack>\n        <VStack spacing={50}>\n          <CardStack />\n          <Button onClick={paginationHandler} variant=\"outline\" size=\"xl\">\n            Load more\n          </Button>\n        </VStack>\n      </Stack>\n      <ModalLayout />\n    </>\n  );\n};\n","import { Catalog } from '../components/Catalog.jsx';\n\nfunction CatalogPage() {\n  return <Catalog />;\n}\n\nexport default CatalogPage;\n"],"names":["ModalLayout","_jsx","Container","centerContent","children","Suspense","fallback","Spinner","variant","size","Outlet","selectOffer","state","offer","selectIsLoading","isLoading","selectIsErrors","isError","CardStack","offercart","useSelector","loading","error","console","log","VStack","spacing","map","_ref","_id","gallery","name","price","rating","location","description","reviews","Card","_jsxs","HStack","Image","w","h","objectFit","srcSet","rounded","CardHeader","justify","Heading","Text","Intl","NumberFormat","style","currency","maximumFractionDigits","format","IconButton","icon","Icon","fontSize","color","isActive","align","height","textDecor","length","CardBody","CardFooter","SearchBar","filter","handleChange","FormControl","as","FormLabel","InputGroup","InputLeftElement","pointerEvents","Input","type","value","onChange","placeholder","Catalog","_useState","useState","_useState2","_slicedToArray","limit","setLimit","_useState3","_useState4","setFilter","useDispatch","dispatch","getOffersResponse","_Fragment","Stack","flexDir","e","target","Button","onClick","prevLimit"],"sourceRoot":""}